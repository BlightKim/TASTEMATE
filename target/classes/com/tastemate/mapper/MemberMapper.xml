<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tastemate.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.tastemate.domain.member.MemberVO">
    <!--@mbg.generated-->
    <!--@Table MEMBER-->
    <id column="USER_IDX" jdbcType="INTEGER" property="userIdx"/>
    <result column="USER_ID" jdbcType="VARCHAR" property="userId"/>
    <result column="USER_PWD" jdbcType="VARCHAR" property="userPwd"/>
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
    <result column="USER_GENDER" jdbcType="INTEGER" property="userGender"
      typeHandler="com.tastemate.handlers.UserGenderHandler"/>
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone"/>
    <result column="USER_ADDRESS" jdbcType="VARCHAR" property="userAddress"/>
    <result column="USER_CLASS" jdbcType="INTEGER" property="userClass"/>
    <result column="USER_LIKE_FOOD" jdbcType="VARCHAR" property="userLikeFood"/>
    <result column="USER_LOGINTYPE" jdbcType="VARCHAR" property="userLoginType"/>
    <result column="USER_DATE" jdbcType="DATE" property="userDate"/>
    <result column="USER_STATUS" jdbcType="INTEGER" property="userStatus"
      typeHandler="com.tastemate.handlers.UserStatusHandler"/>
    <result column="USER_TYPE" jdbcType="INTEGER" property="userType"
      typeHandler="com.tastemate.handlers.UserTypeHandler"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    USER_IDX,
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_GENDER,
    USER_PHONE,
    USER_ADDRESS,
    USER_CLASS,
    USER_LIKE_FOOD,
    USER_LOGINTYPE,
    USER_DATE,
    USER_STATUS,
    USER_PROFILE,
    USER_ORI_PROFILE,
    USER_TYPE
  </sql>
  <!--   유저 인덱스로 찾기 -->
  <select id="selectByUserIdx" parameterType="integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from member
    where USER_IDX = #{userIdx}
  </select>
  <!--  아이디로 찾기 -->
  <select id="selectByUserId" parameterType="string" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from MEMBER
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByUserIdx" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete
    from MEMBER
    where USER_IDX = #{userIdx,jdbcType=INTEGER}
  </delete>
  <insert id="insertUser" parameterType="com.tastemate.domain.member.MemberVO">
    <!--@mbg.generated-->
    insert into MEMBER (USER_IDX,
                        USER_ID,
                        USER_PWD,
                        USER_NAME,
                        USER_GENDER,
                        USER_PHONE,
                        USER_ADDRESS,
                        USER_CLASS,
                        USER_LIKE_FOOD,
                        USER_LOGINTYPE,
                        USER_DATE,
                        USER_STATUS,
                        USER_PROFILE,
                        USER_TYPE)
    values (#{userIdx}, #{userId}, #{userPwd}, #{userName}, #{userGender}, #{userPhone}, #{userAddress}, #{userClass},
            #{userLikeFood}, #{userLoginType}, #{userDate}, #{userStatus}, #{userProfile}, #{userType})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.tastemate.domain.member.MemberVO">
    <!--@mbg.generated-->
    update MEMBER
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        USER_PWD = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        USER_GENDER = #{userGender,jdbcType=DECIMAL,typeHandler=com.tastemate.handlers.UserGenderHandler},
      </if>
      <if test="userPhone != null">
        USER_PHONE = #{userPhone, jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        USER_ADDRESS = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userClass != null">
        USER_CLASS = #{userClass,jdbcType=INTEGER},
      </if>
      <if test="userLikeFood != null">
        USER_LIKE_FOOD = #{userLikeFood,jdbcType=VARCHAR},
      </if>
      <if test="userLogintype != null">
        USER_LOGINTYPE = #{userLogintype,jdbcType=VARCHAR},
      </if>
      <if test="userDate != null">
        USER_DATE = #{userDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        USER_STATUS = #{userStatus,jdbcType=INTEGER,typeHandler=com.tastemate.handlers.UserStatusHandler},
      </if>
      <if test="userType != null">
        USER_TYPE = #{userType,jdbcType=INTEGER,typeHandler=com.tastemate.handlers.UserTypeHandler},
      </if>
    </set>
    where USER_IDX = #{userIdx,jdbcType=INTEGER}
  </update>

  <select id="member_getList" resultType="com.tastemate.domain.member.MemberVO">
    select * from member
  </select>
  <!-- 멤버 추가 -->
  <insert id="user_join" parameterType="com.tastemate.domain.member.MemberVO">
    INSERT INTO MEMBER(USER_IDX, USER_ID, USER_PWD, USER_NAME, USER_GENDER, USER_PHONE, USER_ADDRESS,
    USER_CLASS, USER_LIKE_FOOD, USER_DATE, USER_LOGINTYPE, USER_STATUS, USER_PROFILE,
    USER_ORI_PROFILE, USER_TYPE, USER_MBTI, USER_EMAIL, USER_BIRTH)
    VALUES ((SELECT NVL(MAX(USER_IDX), 0) + 1 FROM MEMBER),
    #{userId}, #{userPwd}, #{userName}, #{userGender}, #{userPhone}, #{userAddress},
    #{userClass}, #{userLikeFood}, SYSDATE, 1, 0, #{userProfile},
    null, 1, #{userMbti}, #{userEmail}, #{userBirth} )
  </insert>

  <!-- 중복 ID 체크 -->
  <select id="checkId" resultType="integer">
    SELECT COUNT(USER_ID) as count FROM MEMBER WHERE USER_ID = #{userId}
  </select>

  <!-- 로그인(아이디) 체크 -->
  <select id="loginId" parameterType="String" resultType="com.tastemate.domain.member.MemberVO">
    SELECT * FROM MEMBER WHERE USER_ID = #{userId}
  </select>


</mapper>